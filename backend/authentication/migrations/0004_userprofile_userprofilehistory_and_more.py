# Generated by Django 5.2.7 on 2025-10-15 03:20

import authentication.models.profile
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0003_emailverification_passwordreset'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('bio', models.TextField(blank=True, help_text='Brief description about yourself (max 500 characters)', max_length=500)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('P', 'Prefer not to say')], help_text='Gender identity', max_length=1)),
                ('phone_number', models.CharField(blank=True, help_text='Phone number in international format', max_length=20, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format: "+999999999". Up to 15 digits allowed.', regex='^\\+?1?\\d{9,15}$')])),
                ('street_address', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state_province', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('profile_picture', models.ImageField(blank=True, help_text='Profile picture (max 5MB, JPG/PNG only)', null=True, upload_to=authentication.models.profile.profile_picture_upload_path)),
                ('website_url', models.URLField(blank=True, help_text='Personal or professional website')),
                ('linkedin_url', models.URLField(blank=True, help_text='LinkedIn profile URL')),
                ('twitter_handle', models.CharField(blank=True, help_text='Twitter handle (with or without @)', max_length=50, validators=[django.core.validators.RegexValidator(message='Twitter handle must be 1-15 characters, letters, numbers, and underscores only', regex='^@?[A-Za-z0-9_]{1,15}$')])),
                ('profile_visibility', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('friends', 'Friends Only')], default='public', help_text='Who can see your profile information', max_length=10)),
                ('email_visibility', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('friends', 'Friends Only')], default='private', help_text='Who can see your email address', max_length=10)),
                ('phone_visibility', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('friends', 'Friends Only')], default='private', help_text='Who can see your phone number', max_length=10)),
                ('preferred_communication', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notifications'), ('none', 'No Communications')], default='email', help_text='Preferred method of communication', max_length=10)),
                ('marketing_emails', models.BooleanField(default=False, help_text='Receive marketing and promotional emails')),
                ('event_notifications', models.BooleanField(default=True, help_text='Receive notifications about events')),
                ('security_alerts', models.BooleanField(default=True, help_text='Receive security-related alerts')),
                ('profile_completion_percentage', models.PositiveIntegerField(default=0, help_text='Percentage of profile completion (0-100)')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_updated_by', models.ForeignKey(blank=True, help_text='User who last updated this profile', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profile_updates', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
                'db_table': 'auth_user_profile',
            },
        ),
        migrations.CreateModel(
            name='UserProfileHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('create', 'Profile Created'), ('update', 'Profile Updated'), ('picture_change', 'Profile Picture Changed'), ('privacy_change', 'Privacy Settings Changed')], max_length=20)),
                ('changed_fields', models.JSONField(default=dict, help_text='Fields that were changed')),
                ('old_values', models.JSONField(default=dict, help_text='Previous values of changed fields')),
                ('new_values', models.JSONField(default=dict, help_text='New values of changed fields')),
                ('changed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('reason', models.CharField(blank=True, help_text='Reason for the change', max_length=255)),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='authentication.userprofile')),
            ],
            options={
                'verbose_name': 'User Profile History',
                'verbose_name_plural': 'User Profile Histories',
                'db_table': 'auth_user_profile_history',
                'ordering': ['-changed_at'],
            },
        ),
        migrations.AddIndex(
            model_name='userprofile',
            index=models.Index(fields=['user'], name='auth_user_p_user_id_054b27_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofile',
            index=models.Index(fields=['profile_visibility'], name='auth_user_p_profile_925083_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofile',
            index=models.Index(fields=['created_at'], name='auth_user_p_created_132639_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofile',
            index=models.Index(fields=['updated_at'], name='auth_user_p_updated_3f25e4_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofile',
            index=models.Index(fields=['profile_completion_percentage'], name='auth_user_p_profile_22a925_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofilehistory',
            index=models.Index(fields=['profile', '-changed_at'], name='auth_user_p_profile_e0f29e_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofilehistory',
            index=models.Index(fields=['changed_by'], name='auth_user_p_changed_0d6858_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofilehistory',
            index=models.Index(fields=['action'], name='auth_user_p_action_d94cb4_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofilehistory',
            index=models.Index(fields=['changed_at'], name='auth_user_p_changed_450f7e_idx'),
        ),
    ]
