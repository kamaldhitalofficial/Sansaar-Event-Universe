# Generated by Django 5.2.7 on 2025-10-16 17:51

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0005_privacysettings_privacysettingshistory_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='MFABackupCode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code_hash', models.CharField(help_text='Hashed backup code for security', max_length=128)),
                ('is_used', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mfa_backup_codes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'MFA Backup Code',
                'verbose_name_plural': 'MFA Backup Codes',
                'db_table': 'auth_mfa_backup_code',
                'indexes': [models.Index(fields=['user', 'is_used'], name='auth_mfa_ba_user_id_b63fe0_idx'), models.Index(fields=['created_at'], name='auth_mfa_ba_created_937b6d_idx')],
            },
        ),
        migrations.CreateModel(
            name='MFADevice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('device_name', models.CharField(help_text='User-friendly name for the device (e.g., "iPhone Authenticator")', max_length=100)),
                ('mfa_type', models.CharField(choices=[('totp', 'Time-based One-Time Password')], default='totp', max_length=10)),
                ('secret_key', models.CharField(help_text='Base32 encoded secret key for TOTP generation', max_length=32)),
                ('is_active', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('last_used_at', models.DateTimeField(blank=True, null=True)),
                ('failed_attempts', models.PositiveIntegerField(default=0)),
                ('locked_until', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mfa_devices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'MFA Device',
                'verbose_name_plural': 'MFA Devices',
                'db_table': 'auth_mfa_device',
                'indexes': [models.Index(fields=['user', 'is_active'], name='auth_mfa_de_user_id_729927_idx'), models.Index(fields=['created_at'], name='auth_mfa_de_created_632812_idx')],
                'unique_together': {('user', 'device_name')},
            },
        ),
        migrations.CreateModel(
            name='TrustedDevice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('device_fingerprint', models.CharField(help_text='Unique fingerprint for device identification', max_length=128)),
                ('device_name', models.CharField(help_text='User-friendly device name', max_length=100)),
                ('user_agent', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_used_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('expires_at', models.DateTimeField(help_text='When this trusted device expires (default 30 days)')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trusted_devices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Trusted Device',
                'verbose_name_plural': 'Trusted Devices',
                'db_table': 'auth_trusted_device',
                'indexes': [models.Index(fields=['user', 'is_active'], name='auth_truste_user_id_df2063_idx'), models.Index(fields=['expires_at'], name='auth_truste_expires_dd99e1_idx'), models.Index(fields=['device_fingerprint'], name='auth_truste_device__8bec9b_idx')],
                'unique_together': {('user', 'device_fingerprint')},
            },
        ),
    ]
