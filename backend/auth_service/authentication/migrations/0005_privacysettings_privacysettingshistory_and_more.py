# Generated by Django 5.2.7 on 2025-10-15 06:48

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0004_userprofile_userprofilehistory_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='PrivacySettings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('data_processing_consent', models.CharField(choices=[('granted', 'Consent Granted'), ('denied', 'Consent Denied'), ('withdrawn', 'Consent Withdrawn'), ('pending', 'Consent Pending')], default='pending', help_text='Consent for processing personal data', max_length=20)),
                ('data_processing_consent_date', models.DateTimeField(blank=True, help_text='Date when data processing consent was given/withdrawn', null=True)),
                ('marketing_consent', models.CharField(choices=[('granted', 'Consent Granted'), ('denied', 'Consent Denied'), ('withdrawn', 'Consent Withdrawn'), ('pending', 'Consent Pending')], default='denied', help_text='Consent for marketing communications', max_length=20)),
                ('marketing_consent_date', models.DateTimeField(blank=True, help_text='Date when marketing consent was given/withdrawn', null=True)),
                ('analytics_consent', models.CharField(choices=[('granted', 'Consent Granted'), ('denied', 'Consent Denied'), ('withdrawn', 'Consent Withdrawn'), ('pending', 'Consent Pending')], default='denied', help_text='Consent for analytics and usage tracking', max_length=20)),
                ('analytics_consent_date', models.DateTimeField(blank=True, help_text='Date when analytics consent was given/withdrawn', null=True)),
                ('data_sharing_level', models.CharField(choices=[('none', 'No Data Sharing'), ('essential', 'Essential Services Only'), ('analytics', 'Analytics and Improvement'), ('marketing', 'Marketing and Promotions'), ('full', 'Full Data Sharing')], default='essential', help_text='Level of data sharing with third parties', max_length=20)),
                ('allow_data_export', models.BooleanField(default=True, help_text='Allow user to export their data')),
                ('allow_account_deletion', models.BooleanField(default=True, help_text='Allow user to request account deletion')),
                ('profile_searchable', models.BooleanField(default=True, help_text='Allow profile to appear in search results')),
                ('profile_indexable', models.BooleanField(default=False, help_text='Allow search engines to index profile')),
                ('show_online_status', models.BooleanField(default=False, help_text='Show when user is online')),
                ('show_last_seen', models.BooleanField(default=False, help_text='Show when user was last active')),
                ('email_notifications', models.BooleanField(default=True, help_text='Receive email notifications')),
                ('sms_notifications', models.BooleanField(default=False, help_text='Receive SMS notifications')),
                ('push_notifications', models.BooleanField(default=True, help_text='Receive push notifications')),
                ('marketing_emails', models.BooleanField(default=False, help_text='Receive marketing emails')),
                ('newsletter_subscription', models.BooleanField(default=False, help_text='Subscribe to newsletter')),
                ('communication_frequency', models.CharField(choices=[('never', 'Never'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('important_only', 'Important Updates Only')], default='important_only', help_text='Frequency of non-essential communications', max_length=20)),
                ('two_factor_required', models.BooleanField(default=False, help_text='Require two-factor authentication')),
                ('login_notifications', models.BooleanField(default=True, help_text='Notify about new login attempts')),
                ('suspicious_activity_alerts', models.BooleanField(default=True, help_text='Alert about suspicious account activity')),
                ('data_breach_notifications', models.BooleanField(default=True, help_text='Notify about data breaches (required by law)')),
                ('auto_delete_inactive_data', models.BooleanField(default=False, help_text='Automatically delete data after inactivity period')),
                ('data_retention_period_months', models.PositiveIntegerField(default=24, help_text='Months to retain data after account deletion request')),
                ('allow_social_login', models.BooleanField(default=True, help_text='Allow login through social media accounts')),
                ('share_with_partners', models.BooleanField(default=False, help_text='Share data with trusted partners')),
                ('allow_api_access', models.BooleanField(default=False, help_text='Allow third-party API access to account data')),
                ('gdpr_compliant', models.BooleanField(default=True, help_text='Account follows GDPR compliance rules')),
                ('ccpa_compliant', models.BooleanField(default=True, help_text='Account follows CCPA compliance rules')),
                ('settings_last_reviewed', models.DateTimeField(blank=True, help_text='Date when user last reviewed privacy settings', null=True)),
                ('consent_version', models.CharField(default='1.0', help_text='Version of privacy policy user consented to', max_length=10)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_updated_by', models.ForeignKey(blank=True, help_text='User who last updated these privacy settings', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='privacy_updates', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='privacy_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Privacy Settings',
                'verbose_name_plural': 'Privacy Settings',
                'db_table': 'auth_privacy_settings',
            },
        ),
        migrations.CreateModel(
            name='PrivacySettingsHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('create', 'Settings Created'), ('update', 'Settings Updated'), ('consent_granted', 'Consent Granted'), ('consent_withdrawn', 'Consent Withdrawn'), ('template_applied', 'Privacy Template Applied'), ('review_completed', 'Privacy Review Completed')], max_length=30)),
                ('changed_fields', models.JSONField(default=dict, help_text='Fields that were changed')),
                ('old_values', models.JSONField(default=dict, help_text='Previous values of changed fields')),
                ('new_values', models.JSONField(default=dict, help_text='New values of changed fields')),
                ('changed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('reason', models.CharField(blank=True, help_text='Reason for the change', max_length=255)),
                ('consent_version', models.CharField(blank=True, help_text='Privacy policy version at time of change', max_length=10)),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('privacy_settings', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='authentication.privacysettings')),
            ],
            options={
                'verbose_name': 'Privacy Settings History',
                'verbose_name_plural': 'Privacy Settings Histories',
                'db_table': 'auth_privacy_settings_history',
                'ordering': ['-changed_at'],
            },
        ),
        migrations.AddIndex(
            model_name='privacysettings',
            index=models.Index(fields=['user'], name='auth_privac_user_id_a86f65_idx'),
        ),
        migrations.AddIndex(
            model_name='privacysettings',
            index=models.Index(fields=['data_processing_consent'], name='auth_privac_data_pr_4a2766_idx'),
        ),
        migrations.AddIndex(
            model_name='privacysettings',
            index=models.Index(fields=['marketing_consent'], name='auth_privac_marketi_dd6b07_idx'),
        ),
        migrations.AddIndex(
            model_name='privacysettings',
            index=models.Index(fields=['gdpr_compliant'], name='auth_privac_gdpr_co_8f9864_idx'),
        ),
        migrations.AddIndex(
            model_name='privacysettings',
            index=models.Index(fields=['created_at'], name='auth_privac_created_e42022_idx'),
        ),
        migrations.AddIndex(
            model_name='privacysettings',
            index=models.Index(fields=['updated_at'], name='auth_privac_updated_3e0341_idx'),
        ),
        migrations.AddIndex(
            model_name='privacysettings',
            index=models.Index(fields=['settings_last_reviewed'], name='auth_privac_setting_d433e7_idx'),
        ),
        migrations.AddIndex(
            model_name='privacysettingshistory',
            index=models.Index(fields=['privacy_settings', '-changed_at'], name='auth_privac_privacy_28cb29_idx'),
        ),
        migrations.AddIndex(
            model_name='privacysettingshistory',
            index=models.Index(fields=['changed_by'], name='auth_privac_changed_50d9ea_idx'),
        ),
        migrations.AddIndex(
            model_name='privacysettingshistory',
            index=models.Index(fields=['action'], name='auth_privac_action_a31624_idx'),
        ),
        migrations.AddIndex(
            model_name='privacysettingshistory',
            index=models.Index(fields=['changed_at'], name='auth_privac_changed_49eb57_idx'),
        ),
    ]
