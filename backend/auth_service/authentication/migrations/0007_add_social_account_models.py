# Generated by Django 5.2.7 on 2025-10-17 02:46

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0006_mfabackupcode_mfadevice_trusteddevice'),
    ]

    operations = [
        migrations.AddField(
            model_name='privacysettings',
            name='allow_social_profile_sync',
            field=models.BooleanField(default=True, help_text='Allow syncing profile information from social accounts'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='language_preference',
            field=models.CharField(default='en', help_text='Preferred language code (e.g., en, es, fr)', max_length=10),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='profile_picture_url',
            field=models.URLField(blank=True, help_text='Profile picture URL from social providers'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user_timezone',
            field=models.CharField(default='UTC', help_text='User timezone (e.g., America/New_York, Europe/London)', max_length=50),
        ),
        migrations.CreateModel(
            name='SocialAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('provider', models.CharField(choices=[('google', 'Google')], help_text='Social authentication provider', max_length=50)),
                ('provider_id', models.CharField(help_text='Unique identifier from the social provider', max_length=255)),
                ('email', models.EmailField(help_text='Email address from the social provider', max_length=254)),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('profile_picture_url', models.URLField(blank=True, null=True)),
                ('access_token', models.TextField(blank=True, help_text='OAuth access token (encrypted in production)')),
                ('refresh_token', models.TextField(blank=True, help_text='OAuth refresh token (encrypted in production)')),
                ('token_expires_at', models.DateTimeField(blank=True, help_text='When the access token expires', null=True)),
                ('extra_data', models.JSONField(blank=True, default=dict, help_text='Additional data from the social provider')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this social account is active')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_login_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_accounts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Social Account',
                'verbose_name_plural': 'Social Accounts',
                'db_table': 'auth_social_account',
                'indexes': [models.Index(fields=['provider', 'provider_id'], name='auth_social_provide_0cde6a_idx'), models.Index(fields=['user', 'provider'], name='auth_social_user_id_2a0d99_idx'), models.Index(fields=['email'], name='auth_social_email_d9044b_idx'), models.Index(fields=['created_at'], name='auth_social_created_024da8_idx')],
                'unique_together': {('provider', 'provider_id'), ('user', 'provider')},
            },
        ),
        migrations.CreateModel(
            name='SocialAccountLinkRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('provider', models.CharField(choices=[('google', 'Google')], max_length=50)),
                ('provider_id', models.CharField(help_text='Unique identifier from the social provider', max_length=255)),
                ('provider_email', models.EmailField(help_text='Email from the social provider', max_length=254)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('verification_token', models.CharField(help_text='Token for verifying the link request', max_length=255, unique=True)),
                ('temp_social_data', models.JSONField(default=dict, help_text='Temporary storage for social account data during linking')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('expires_at', models.DateTimeField(help_text='When this link request expires')),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_link_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Social Account Link Request',
                'verbose_name_plural': 'Social Account Link Requests',
                'db_table': 'auth_social_link_request',
                'indexes': [models.Index(fields=['verification_token'], name='auth_social_verific_75bf9d_idx'), models.Index(fields=['user', 'provider'], name='auth_social_user_id_23428c_idx'), models.Index(fields=['status', 'expires_at'], name='auth_social_status_5173e3_idx')],
            },
        ),
    ]
